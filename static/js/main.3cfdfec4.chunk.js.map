{"version":3,"sources":["components/services/contactsAPI.js","components/redux/Operations/contacts-operations.js","components/redux/actions/contacts-action.js","components/redux/reducers/contacts-reducer.js","components/redux/store.js","components/ContactForm/ContactForm.styles.jsx","components/redux/selectors/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styles.jsx","components/Loader/Loader.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["getContacts","a","axios","get","data","addContact","contact","post","deleteContact","id","delete","defaults","baseURL","displayToastError","e","toast","error","fetchContactsList","createAsyncThunk","_","rejectWithValue","contactsAPI","response","message","createItem","name","success","deleteItem","changeFilter","createAction","contactsActions","items","createReducer","fulfilled","action","payload","state","filter","isLoading","pending","rejected","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","Form","styled","form","getFilter","getStatusLoader","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","phone","setsPhone","dispatch","useDispatch","useSelector","handleChangeForm","currentTarget","value","console","log","resetForm","onSubmit","preventDefault","find","alert","type","onChange","pattern","title","required","autoComplete","List","ul","Fallback","color","height","width","ContactList","loading","useEffect","map","onClick","size","Thumb","div","Filter","selectors","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cfdfec4.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://611560258f38520017a3849b.mockapi.io/api/v1';\n\nexport async function getContacts() {\n  const { data } = await axios.get(`/contacts`);\n  return data;\n}\n\nexport async function addContact(contact) {\n  const { data } = await axios.post(`/contacts`, contact);\n  return data;\n}\n\nexport async function deleteContact(id) {\n  await axios.delete(`/contacts/${id}`);\n  return id;\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport * as contactsAPI from 'components/services/contactsAPI';\n\nconst displayToastError = e => toast.error(`${e}`);\n\nconst displayToastSuccess = message => toast.success(`${message}`);\n\nexport const fetchContactsList = createAsyncThunk(\n  'users/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await contactsAPI.getContacts();\n      return response;\n    } catch (error) {\n      displayToastError(error.message);\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const createItem = createAsyncThunk(\n  'contacts/add',\n  async (contact, { rejectWithValue }) => {\n    try {\n      displayToastSuccess(`Contact ${contact.name} added`);\n      const response = await contactsAPI.addContact(contact);\n      return response;\n    } catch (error) {\n      displayToastError(error.message);\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const deleteItem = createAsyncThunk(\n  'contacts/delete',\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await contactsAPI.deleteContact(id);\n      return response;\n    } catch (error) {\n      displayToastError(error.message);\n      return rejectWithValue(error);\n    }\n  },\n);\n","import { createAction } from '@reduxjs/toolkit';\n\n// export const addContact = createAction('contacts/add', ({ name, phone }) => ({\n//   payload: {\n//     name,\n//     phone,\n//   },\n// }));\n\n// export const deleteContact = createAction('contacts/delete');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\nconst contactsActions = {\n  // addContact,\n  // deleteContact,\n  changeFilter,\n};\nexport default contactsActions;\n","import { combineReducers } from 'redux';\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsList,\n  createItem,\n  deleteItem,\n} from '../Operations/contacts-operations';\nimport { changeFilter } from '../actions/contacts-action';\n\nconst items = createReducer([], {\n  [fetchContactsList.fulfilled]: (_, action) => action.payload,\n  [createItem.fulfilled]: (state, { payload }) => {\n    return [...state, payload];\n  },\n  [deleteItem.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactsList.pending]: () => true,\n  [fetchContactsList.fulfilled]: () => false,\n  [fetchContactsList.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsList.rejected]: (_, action) => action.payload,\n  [fetchContactsList.pending]: () => null,\n  [createItem.rejected]: (_, action) => action.payload,\n  [createItem.pending]: () => null,\n  [deleteItem.rejected]: (_, action) => action.payload,\n  [deleteItem.pending]: () => null,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport contactsReducer from './reducers/contacts-reducer';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: grid;\n  grid-template-columns: min-content;\n\n  & button {\n    margin: 10px 0;\n    background-color: #e6ffe0d5;\n    border: 1px solid #000;\n    border-radius: 4px;\n    &:hover,\n    :focus {\n      background-color: #bffab0d3;\n      transform: scale(1.1);\n    }\n  }\n`;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getStatusLoader = state => state.contacts.isLoading;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form } from './ContactForm.styles';\nimport { getContacts } from '../redux/selectors/contacts-selectors';\nimport { createItem } from '../redux/Operations/contacts-operations';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setsPhone] = useState('');\n\n  const dispatch = useDispatch();\n  const state = useSelector(getContacts);\n\n  const handleChangeForm = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        return setName(value);\n\n      case 'phone':\n        return setsPhone(value);\n\n      default:\n        console.log('default');\n    }\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const findContact = state.find(contact => contact.name.includes(name));\n\n    if (findContact) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(createItem({ name, phone }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setsPhone('');\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmitForm}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            onChange={handleChangeForm}\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            autoComplete=\"off\"\n          />\n        </label>\n        <label>\n          Phone\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            onChange={handleChangeForm}\n            value={phone}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            autoComplete=\"off\"\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </Form>\n    </div>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 5px;\n  margin: 10px 0;\n  width: 280px;\n\n  & li {\n    margin: 5px 0;\n    padding-bottom: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-bottom: 1px solid grey;\n    & button {\n      background-color: #f0c8c8;\n      border: 1px solid #000;\n      border-radius: 4px;\n      &:hover,\n      :focus {\n        background-color: #f09797;\n        transform: scale(1.05);\n      }\n    }\n  }\n`;\n","import Loader from 'react-loader-spinner';\n\nexport default function Fallback() {\n  return <Loader type=\"Oval\" color=\"#f39f21\" height={30} width={30} />;\n}\n","import { useEffect } from 'react';\nimport { List } from './ContactList.styles';\nimport { AiFillDelete } from 'react-icons/ai';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getVisibleContacts,\n  getStatusLoader,\n} from '../redux/selectors/contacts-selectors';\nimport Fallback from '../Loader/Loader';\nimport {\n  fetchContactsList,\n  deleteItem,\n} from '../redux/Operations/contacts-operations';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getVisibleContacts);\n  const loading = useSelector(getStatusLoader);\n\n  const onDeleteContacts = id => dispatch(deleteItem(id));\n\n  useEffect(() => dispatch(fetchContactsList()), [dispatch]);\n\n  return (\n    <>\n      {loading && <Fallback />}\n      <List>\n        {contacts.map(contact => (\n          <li key={contact.id}>\n            {contact.name}: {contact.phone}\n            <button type=\"button\" onClick={() => onDeleteContacts(contact.id)}>\n              <AiFillDelete size=\"20\" />\n            </button>\n          </li>\n        ))}\n      </List>\n    </>\n  );\n}\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Thumb = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n\n  & p {\n    margin: 5px 0;\n  }\n`;\n","import { Thumb } from './Filter.styles';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport contactsActions from '../redux/actions/contacts-action';\r\nimport * as selectors from 'components/redux/selectors/contacts-selectors';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(selectors.getFilter);\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Thumb>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={e =>\r\n          dispatch(contactsActions.changeFilter(e.currentTarget.value))\r\n        }\r\n        value={value}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        autoComplete=\"off\"\r\n      />\r\n    </Thumb>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function App() {\n  return (\n    <div id=\"container\">\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './components/redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}